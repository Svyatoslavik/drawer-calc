{"version":3,"sources":["layouts/MainLayout/MainLayout.tsx","components/Details/Details.tsx","components/ItemDetails/ItemDetails.tsx","components/Title/Title.tsx","utils/utils.ts","components/RunnerSystemForm/RunnerSystemForm.tsx","pages/PageCalcHafeleWoodPro/PageCalcHafeleWoodPro.tsx","pages/PageCalcBlum/PageCalcBlum.tsx","pages/PageCalcBlumAntaro/PageCalcBlumAntaro.tsx","pages/PageHome/PageHome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MainLayoutContext","React","createContext","title","downdloadLink","MainLayout","props","useState","isDrawerOpn","setIsDrawerOpen","setTitle","linkToDocument","setLinkToDocument","toggleDrawer","open","event","type","key","Provider","value","SwipeableDrawer","anchor","onClose","onOpen","Box","sx","width","role","onClick","onKeyDown","List","ListItem","button","component","RouterLink","to","ListItemIcon","ListItemText","primary","flexGrow","CssBaseline","AppBar","position","Toolbar","display","xs","md","IconButton","size","edge","color","mr","Typography","variant","pr","Button","my","target","href","Container","maxWidth","mt","mb","children","Details","Paper","p","gutterBottom","id","whiteSpace","ItemDetails","items","TableContainer","Table","TableBody","map","i","TableRow","TableCell","scope","style","Title","fontSize","parseEventNum","num","parseInt","isNaN","RunnerSystemForm","state","onChange","updateState","stateDiff","Grid","container","spacing","item","TextField","required","inputProps","inputMode","label","fullWidth","onInput","e","length","height","dspWidth","gapForChipboardEdge","PageCalcHafeleWoodPro","layoutCtx","useContext","useEffect","formState","setFormState","depth","hem","bottomWidth","bottomDepth","backWidth","backHeight","sideHeight","sideDepth","frontWidth","frontHeight","detailsTxt","titleWidth","PageCaclBlum","nominalLength","drawerLength","PageCalcBlumAntaro","setWidth","setNominalLength","setGapForChipboardEdge","bottomLength","PageHome","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"scAkBaA,EAAoBC,IAAMC,eACnC,SAACC,EAAuBC,OAGrB,SAASC,EAAWC,GACvB,MAAuCC,oBAAS,GAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EAA0BF,mBAAyB,MAAnD,mBAAOJ,EAAP,KAAcO,EAAd,KACA,EAA4CH,mBAAyB,MAArE,mBAAOI,EAAP,KAAuBC,EAAvB,KAEMC,EAAe,SAACC,GAAD,OACjB,SAACC,KAEOA,GACe,YAAfA,EAAMC,MACkC,QAAtCD,EAA8BE,KACW,UAAtCF,EAA8BE,MAKvCR,EAAgBK,KAGxB,OACI,mCACI,eAACd,EAAkBkB,SAAnB,CAA4BC,MAAO,SAAChB,EAAuBC,GACvDM,EAASP,GACTS,EAAkBR,IAFtB,UAII,cAACgB,EAAA,EAAD,CACIC,OAAO,OACPP,KAAMN,EACNc,QAAST,GAAa,GACtBU,OAAQV,GAAa,GAJzB,SAMI,cAACW,EAAA,EAAD,CACIC,GAAI,CAAEC,MAAO,KACbC,KAAK,eACLC,QAASf,GAAa,GACtBgB,UAAWhB,GAAa,GAJ5B,SAMI,eAACiB,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAYC,GAAG,IAA3C,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,kDAE1B,eAACP,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAYC,GAAG,UAA3C,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,cAE1B,eAACP,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAYC,GAAG,QAA3C,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,YAE1B,eAACP,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAYC,GAAG,UAA3C,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAQ,qBAMtC,eAACd,EAAA,EAAD,CAAKC,GAAI,CAAEc,SAAU,GAArB,UACI,cAACC,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACnB,EAAA,EAAD,CAAKC,GAAI,CAAEmB,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAtC,SACI,cAACC,EAAA,EAAD,CACInB,QAASf,GAAa,GACtBmC,KAAK,QACLC,KAAK,QACLC,MAAM,UACN,aAAW,OACXzB,GAAI,CAAE0B,GAAI,GANd,SAQI,cAAC,IAAD,QAIR,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKpB,UAAU,MAAMR,GAAI,CAAEc,SAAU,CAAEM,GAAI,EAAGC,GAAI,GAAKF,QAAS,OAAQU,GAAI,GAAhG,SACKnD,IAEL,eAACqB,EAAA,EAAD,CAAKC,GAAI,CAAEc,SAAU,EAAGK,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAnD,UACI,cAACS,EAAA,EAAD,CACI9B,GAAI,CAAE+B,GAAI,EAAGN,MAAO,QAASN,QAAS,SACtCX,UAAWC,IAAYC,GAAG,IAF9B,wDAMA,cAACoB,EAAA,EAAD,CACI9B,GAAI,CAAE+B,GAAI,EAAGN,MAAO,QAASN,QAAS,SACtCX,UAAWC,IAAYC,GAAG,UAF9B,oBAMA,cAACoB,EAAA,EAAD,CACI9B,GAAI,CAAE+B,GAAI,EAAGN,MAAO,QAASN,QAAS,SACtCX,UAAWC,IAAYC,GAAG,QAF9B,yBAMA,cAACoB,EAAA,EAAD,CACI9B,GAAI,CAAE+B,GAAI,EAAGN,MAAO,QAASN,QAAS,SACtCX,UAAWC,IAAYC,GAAG,UAF9B,4BAQAxB,GACA,cAACoC,EAAA,EAAD,CACId,UAAU,IACVwB,OAAO,SACPC,KAAM/C,EACNuC,MAAM,UAJV,SAKI,cAAC,IAAD,WAMhB,cAACS,EAAA,EAAD,CAAWC,SAAS,KAAKnC,GAAI,CAAEoC,GAAI,EAAGC,GAAI,GAA1C,SACKxD,EAAMyD,mBClJxB,SAASC,EAAQ1D,GACpB,OACI,eAAC2D,EAAA,EAAD,CAAOxC,GAAI,CACPyC,EAAG,GADP,UAGI,cAACd,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KAAKH,MAAM,UAAUiB,cAAY,EAApE,mDAGA,cAACf,EAAA,EAAD,CAAYgB,GAAG,oBAAoB3C,GAAI,CAAE4C,WAAY,WAAYH,EAAG,GAApE,gBACK5D,QADL,IACKA,OADL,EACKA,EAAOyD,c,iDCVXO,EAAc,SAAC,GAAD,IACvBnE,EADuB,EACvBA,MACAoE,EAFuB,EAEvBA,MAFuB,OAWvB,qCACKpE,GAAU,cAACiD,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KAAKc,cAAY,EAAC1C,GAAI,CAAEoC,GAAI,GAA/D,SACN1D,IAEL,cAACqE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAO,aAAW,0BAAlB,SACI,cAACC,EAAA,EAAD,UACKH,EAAMI,KAAI,WAAmBC,GAAnB,IAAGzE,EAAH,EAAGA,MAAOgB,EAAV,EAAUA,MAAV,OACP,eAAC0D,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAW7C,UAAU,KAAK8C,MAAM,MAAMC,MAAO,CAAEtD,MAAO,EAAG2C,WAAY,UAArE,SACKlE,IAEL,cAAC2E,EAAA,EAAD,UACK3D,MALMyD,gBCnB1BK,EAAQ,SAAC3E,GAAD,OACjB,cAAC8C,EAAA,EAAD,CAAYC,QAAQ,KAAK5B,GAAI,CAAEqC,GAAI,EAAGoB,SAAU,CAAErC,GAAI,OAAQC,GAAI,SAAlE,gBACKxC,QADL,IACKA,OADL,EACKA,EAAOyD,Y,iBCLHoB,EAAgB,SAACpE,GAC1B,IAAMqE,EAAMC,SAAUtE,EAAM0C,OAAetC,OAC3C,OAAOmE,MAAMF,GAAO,EAAIA,GCUfG,EAAmB,SAAC,GAA8G,IAA5GC,EAA2G,EAA3GA,MAAOC,EAAoG,EAApGA,SAEhCC,EAAc,SAACC,GACjBF,EAAS,2BACFD,GACAG,KAIX,OACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACI,cAACmD,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAY,CAAEC,UAAW,WACzBC,MAAM,0KACNC,WAAS,EACThD,QAAQ,WACRlC,MAAOqE,EAAM9D,MACb4E,QAAS,SAACC,GAAD,OAAOb,EAAY,CAAEhE,MAAOyD,EAAcoB,UAG3D,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACkD,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAY,CAAEC,UAAW,WACzBC,MAAM,wFACNC,WAAS,EACThD,QAAQ,WACRlC,MAAOqE,EAAMgB,OACbF,QAAS,SAACC,GAAD,OAAOb,EAAY,CAAEc,OAAQrB,EAAcoB,UAG5D,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACkD,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAY,CAAEC,UAAW,WACzBC,MAAM,kFACNC,WAAS,EACThD,QAAQ,WACRlC,MAAOqE,EAAMiB,OACbH,QAAS,SAACC,GAAD,OAAOb,EAAY,CAAEe,OAAQtB,EAAcoB,UAG5D,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACkD,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAY,CAAEC,UAAW,WACzBC,MAAM,gEACNC,WAAS,EACThD,QAAQ,WACRlC,MAAOqE,EAAMkB,SACbJ,QAAS,SAACC,GAAD,OAAOb,EAAY,CAAEgB,SAAUvB,EAAcoB,UAG9D,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACkD,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAY,CAAEC,UAAW,WACzBC,MAAM,uHACNC,WAAS,EACThD,QAAQ,WACRlC,MAAOqE,EAAMmB,oBACbL,QAAS,SAACC,GAAD,OAAOb,EAAY,CAAEiB,oBAAqBxB,EAAcoB,cClE9E,SAASK,IACd,IAAMC,EAAYC,qBAAW9G,GAC7B+G,qBAAU,kBAAMF,EAAU,kBAAmB,mBAAkB,CAACA,IAChE,MAAkCtG,mBAAgC,CAChEmB,MAAO,IACP+E,OAAQ,IACRD,OAAQ,IACRE,SAAU,GACVC,oBAAqB,IALvB,mBAAOK,EAAP,KAAkBC,EAAlB,KASEvF,EAKEsF,EALFtF,MACA+E,EAIEO,EAJFP,OACQS,EAGNF,EAHFR,OACAE,EAEEM,EAFFN,SACqBS,EACnBH,EADFL,oBAIIS,EAAc1F,EAAQ,GAAKyF,EAC3BE,EAAcH,EAAQR,EAAWS,EAEjCG,EAAY5F,EAAQ,GAAKyF,EACzBI,EAAad,EAASU,EAEtBK,EAAaf,EAAS,GAAKU,EAC3BM,EAAYP,EAAQC,EAEpBO,EAAahG,EAAQ,GAAKyF,EAC1BQ,EAAclB,EAASC,EAAWS,EAElCS,EAAU,UACXR,EADW,cACMC,EADN,6BAEhBC,EAFgB,cAEDC,EAFC,6BAGhBG,EAHgB,cAGAC,EAHA,6BAIhBF,EAJgB,cAIDD,EAJC,8FAMHd,EANG,yNAQ0BS,EAR1B,OAWhB,OACE,qCACE,cAAC,EAAD,uIAIA,cAAC,EAAD,CACE3B,MAAOwB,EACPvB,SAAUwB,IAGZ,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGrE,GAAI,CAAEoC,GAAI,EAAGC,GAAI,GAA7C,UACE,cAAC8B,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACE,eAACoB,EAAA,EAAD,CAAOxC,GAAI,CACTyC,EAAG,GADL,UAGE,cAACd,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KAAKH,MAAM,UAAUiB,cAAY,EAApE,sKAIA,cAAC,EAAD,CACEhE,MAAM,qBACNoE,MAAO,CACL,CAAEpE,MAAO,uCAAUgB,MAAOiG,GAC1B,CAAEjH,MAAO,uCAAUgB,MAAOkG,MAI9B,cAAC,EAAD,CACElH,MAAM,4EACNoE,MAAO,CACL,CAAEpE,MAAO,uCAAUgB,MAAOmG,GAC1B,CAAEnH,MAAO,uCAAUgB,MAAOoG,MAI9B,cAAC,EAAD,CACEpH,MAAM,mEACNoE,MAAO,CACL,CAAEpE,MAAO,uCAAUgB,MAAOsG,GAC1B,CAAEtH,MAAO,uCAAUgB,MAAOqG,MAI9B,cAAC,EAAD,CACErH,MAAM,yHACNoE,MAAO,CACL,CAAEpE,MAAO,uCAAUgB,MAAOuG,GAC1B,CAAEvH,MAAO,uCAAUgB,MAAOwG,WAOlC,cAAC/B,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACE,eAACoB,EAAA,EAAD,CAAOxC,GAAI,CACTyC,EAAG,GADL,UAGE,cAACd,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KAAKH,MAAM,UAAUiB,cAAY,EAApE,wFAIA,cAAC,EAAD,CACE0D,WAAY,IACZtD,MAAO,CACL,CAAEpE,MAAO,8LAAyCgB,MAAOsF,EAAS,IAClE,CAAEtG,MAAO,2JAA+BgB,MAAO+F,EAAQ,eAOjE,cAACtB,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACE,cAACmB,EAAD,UAAU4D,SCvHX,SAASE,IACZ,IAAMjB,EAAYC,qBAAW9G,GAC7B+G,qBAAU,kBAAMF,EAAU,uBAAwB,wBAAuB,CAACA,IAE1E,MAAkCtG,mBAAgC,CAC9DmB,MAAO,IACP+E,OAAQ,IACRD,OAAQ,IACRE,SAAU,GACVC,oBAAqB,IALzB,mBAAOK,EAAP,KAAkBC,EAAlB,KASIvF,EAKAsF,EALAtF,MACA+E,EAIAO,EAJAP,OACQsB,EAGRf,EAHAR,OACAE,EAEAM,EAFAN,SACqBS,EACrBH,EADAL,oBAIEqB,EAAeD,EAAgB,EAE/BX,EAAc1F,EAAQ,GAAKyF,EAC3BE,EAAcW,EAAetB,EAAWS,EAAM,EAE9CG,EAAY5F,EAAQ,GAAKyF,EACzBI,EAAad,EAASU,EAEtBK,EAAaf,EAAS,GAAKU,EAC3BM,EAAYO,EAAeb,EAE3BO,EAAahG,EAAQ,GAAKyF,EAC1BQ,EAAclB,EAASC,EAAWS,EAElCS,EACF,UAAGR,EAAH,cAAoBC,EAApB,oBAA0C,KAA1C,UACGC,EADH,cACkBC,EADlB,oBACuC,KADvC,UAEGG,EAFH,cAEmBC,EAFnB,oBAEyC,KAFzC,UAGGF,EAHH,cAGkBD,EAHlB,oBAGuC,OAHvC,yEAIgBd,GAAa,KAJ7B,oNAK6CS,EAL7C,KAOJ,OACI,qCACI,cAAC,EAAD,qMAEA,cAAC,EAAD,CACI3B,MAAOwB,EACPvB,SAAUwB,IAGd,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGrE,GAAI,CAAEoC,GAAI,EAAGC,GAAI,GAA7C,UACI,cAAC8B,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACI,eAACoB,EAAA,EAAD,CAAOxC,GAAI,CACPyC,EAAG,GADP,UAGI,cAACd,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KAAKH,MAAM,UAAUiB,cAAY,EAApE,sKAIA,cAAC,EAAD,CACIhE,MAAM,qBACNoE,MAAO,CACH,CAAEpE,MAAO,uCAAUgB,MAAOiG,GAC1B,CAAEjH,MAAO,uCAAUgB,MAAOkG,MAIlC,cAAC,EAAD,CACIlH,MAAM,4EACNoE,MAAO,CACH,CAAEpE,MAAO,uCAAUgB,MAAOmG,GAC1B,CAAEnH,MAAO,uCAAUgB,MAAOoG,MAIlC,cAAC,EAAD,CACIpH,MAAM,mEACNoE,MAAO,CACH,CAAEpE,MAAO,uCAAUgB,MAAOsG,GAC1B,CAAEtH,MAAO,uCAAUgB,MAAOqG,MAIlC,cAAC,EAAD,CACIrH,MAAM,yHACNoE,MAAO,CACH,CAAEpE,MAAO,uCAAUgB,MAAOuG,GAC1B,CAAEvH,MAAO,uCAAUgB,MAAOwG,WAO1C,cAAC/B,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACI,eAACoB,EAAA,EAAD,CAAOxC,GAAI,CACPyC,EAAG,GADP,UAGI,cAACd,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KAAKH,MAAM,UAAUiB,cAAY,EAApE,wFAIA,cAAC,EAAD,CACI0D,WAAY,IACZtD,MAAO,CACH,CAAEpE,MAAO,8LAAyCgB,MAAOsF,EAAS,IAClE,CAAEtG,MAAO,2JAA+BgB,MAAO4G,EAAgB,eAMnF,cAACnC,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACI,cAACmB,EAAD,UAAU4D,SClHnB,SAASK,IACZ,IAAMpB,EAAYC,qBAAW9G,GAC7B+G,qBAAU,kBAAMF,EAAU,aAAc,4BAA2B,CAACA,IAEpE,MAA0BtG,mBAAS,KAAnC,mBAAOmB,EAAP,KAAcwG,EAAd,KACA,EAA0C3H,mBAAS,KAAnD,mBAAOwH,EAAP,KAAsBI,EAAtB,KACA,EAAsD5H,mBAAS,GAA/D,mBAAOoG,EAAP,KAA4ByB,EAA5B,KAEMhB,EAAc1F,EAAQ,GAAKiF,EAC3B0B,EAAeN,EAAgB,GAAKpB,EAEpCW,EAAY5F,EAAQ,GAAKiF,EACzBY,EAAa,GAAKZ,EAElBiB,EACF,UAAGR,EAAH,cAAoBiB,EAApB,oBAA2C,KAA3C,UACGf,EADH,cACkBC,EADlB,4TAG6CZ,GAEjD,OACI,qCACI,cAAC,EAAD,2LACA,eAACf,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACkD,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAY,CAAEC,UAAW,WACzBC,MAAM,0KACNC,WAAS,EACThD,QAAQ,WACRlC,MAAOO,EACP4E,QAAS,SAACC,GAAD,OAAO2B,EAAS/C,EAAcoB,SAG/C,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACkD,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAY,CAAEC,UAAW,WACzBC,MAAM,yIACNC,WAAS,EACThD,QAAQ,WACRlC,MAAO4G,EACPzB,QAAS,SAACC,GAAD,OAAO4B,EAAiBhD,EAAcoB,SAGvD,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACkD,EAAA,EAAD,CACIC,UAAQ,EACRC,WAAY,CAAEC,UAAW,WACzBC,MAAM,uHACNC,WAAS,EACThD,QAAQ,WACRlC,MAAOwF,EACPL,QAAS,SAACC,GAAD,OAAO6B,EAAuBjD,EAAcoB,YAIjE,cAACX,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGrE,GAAI,CAAEoC,GAAI,EAAGC,GAAI,GAA7C,SACI,cAAC8B,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACI,eAACoB,EAAA,EAAD,CAAOxC,GAAI,CACPyC,EAAG,GADP,UAGI,cAACd,EAAA,EAAD,CAAYnB,UAAU,KAAKoB,QAAQ,KAAKH,MAAM,UAAUiB,cAAY,EAApE,sKAIA,cAAC,EAAD,CACIhE,MAAM,qBACNoE,MAAO,CACH,CAAEpE,MAAO,uCAAUgB,MAAOiG,GAC1B,CAAEjH,MAAO,uCAAUgB,MAAOkH,MAIlC,cAAC,EAAD,CACIlI,MAAM,4EACNoE,MAAO,CACH,CAAEpE,MAAO,uCAAUgB,MAAOmG,GAC1B,CAAEnH,MAAO,uCAAUgB,MAAOoG,aAO9C,cAAC3B,EAAA,EAAD,CAAMG,MAAI,EAAClD,GAAI,GAAf,SACI,cAACmB,EAAD,UAAU4D,SC1FnB,SAASU,IAEZ,IAAMzB,EAAYC,qBAAW9G,GAE7B,OADA+G,qBAAU,kBAAMF,EAAU,6CAAW,QAAO,CAACA,IAEzC,4CCcO0B,MAdf,WACE,OACE,cAAClI,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmI,KAAK,IAAIC,QAAS,cAACH,EAAD,MACzB,cAAC,IAAD,CAAOE,KAAK,OAAOC,QAAS,cAACX,EAAD,MAC5B,cAAC,IAAD,CAAOU,KAAK,SAASC,QAAS,cAACR,EAAD,MAC9B,cAAC,IAAD,CAAOO,KAAK,SAASC,QAAS,cAAC7B,EAAD,YCJvB8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1f62451.chunk.js","sourcesContent":["import React, { PropsWithChildren, useState } from 'react';\nimport {\n    Link as RouterLink,\n} from 'react-router-dom';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { Container, CssBaseline, List, ListItem, ListItemIcon, ListItemText, SwipeableDrawer } from '@mui/material';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport HomeIcon from '@mui/icons-material/Home';\nimport CalculateIcon from '@mui/icons-material/Calculate';\n\ntype NullableString = string | null;\n\nexport const MainLayoutContext = React.createContext(\n    (title: NullableString, downdloadLink: NullableString) => { }\n);\n\nexport function MainLayout(props: PropsWithChildren<{}>) {\n    const [isDrawerOpn, setIsDrawerOpen] = useState(false);\n\n    const [title, setTitle] = useState<NullableString>(null);\n    const [linkToDocument, setLinkToDocument] = useState<NullableString>(null);\n\n    const toggleDrawer = (open: boolean) =>\n        (event: React.KeyboardEvent | React.MouseEvent) => {\n            if (\n                event &&\n                event.type === 'keydown' &&\n                ((event as React.KeyboardEvent).key === 'Tab' ||\n                    (event as React.KeyboardEvent).key === 'Shift')\n            ) {\n                return;\n            }\n\n            setIsDrawerOpen(open);\n        };\n\n    return (\n        <>\n            <MainLayoutContext.Provider value={(title: NullableString, downdloadLink: NullableString) => {\n                setTitle(title);\n                setLinkToDocument(downdloadLink);\n            }}>\n                <SwipeableDrawer\n                    anchor=\"left\"\n                    open={isDrawerOpn}\n                    onClose={toggleDrawer(false)}\n                    onOpen={toggleDrawer(true)}\n                >\n                    <Box\n                        sx={{ width: 250 }}\n                        role=\"presentation\"\n                        onClick={toggleDrawer(false)}\n                        onKeyDown={toggleDrawer(false)}\n                    >\n                        <List>\n                            <ListItem button component={RouterLink} to=\"/\">\n                                <ListItemIcon>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Главная\" />\n                            </ListItem>\n                            <ListItem button component={RouterLink} to=\"/hafele\">\n                                <ListItemIcon>\n                                    <CalculateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Hafele\" />\n                            </ListItem>\n                            <ListItem button component={RouterLink} to=\"/blum\">\n                                <ListItemIcon>\n                                    <CalculateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Blum\" />\n                            </ListItem>\n                            <ListItem button component={RouterLink} to=\"/antaro\">\n                                <ListItemIcon>\n                                    <CalculateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Antaro\" />\n                            </ListItem>\n                        </List>\n\n                    </Box>\n                </SwipeableDrawer>\n                <Box sx={{ flexGrow: 1 }}>\n                    <CssBaseline />\n\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                <IconButton\n                                    onClick={toggleDrawer(true)}\n                                    size=\"large\"\n                                    edge=\"start\"\n                                    color=\"inherit\"\n                                    aria-label=\"menu\"\n                                    sx={{ mr: 2 }}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            </Box>\n\n                            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: { xs: 1, md: 0 }, display: 'flex', pr: 2 }}>\n                                {title}\n                            </Typography>\n                            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                                <Button\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\n                                    component={RouterLink} to=\"/\"\n                                >\n                                    Главная\n                                </Button>\n                                <Button\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\n                                    component={RouterLink} to=\"/hafele\"\n                                >\n                                    Hafele\n                                </Button>\n                                <Button\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\n                                    component={RouterLink} to=\"/blum\"\n                                >\n                                    Blum Tandem\n                                </Button>\n                                <Button\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\n                                    component={RouterLink} to=\"/antaro\"\n                                >\n                                    Blum Antaro\n                                </Button>\n                            </Box>\n                            {\n                                linkToDocument &&\n                                <IconButton\n                                    component=\"a\"\n                                    target=\"_blank\"\n                                    href={linkToDocument}\n                                    color=\"inherit\">\n                                    <PictureAsPdfIcon />\n                                </IconButton>\n                            }\n\n                        </Toolbar>\n                    </AppBar>\n                    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n                        {props.children}\n                    </Container>\n                </Box>\n            </MainLayoutContext.Provider>\n        </>\n    );\n}\n","import React, { PropsWithChildren } from 'react';\nimport { Paper, Typography } from '@mui/material';\n\n\nexport function Details(props: PropsWithChildren<{}>) {\n    return (\n        <Paper sx={{\n            p: 2,\n        }}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n                Детали:\n            </Typography>\n            <Typography id=\"modal-description\" sx={{ whiteSpace: 'pre-line', p: 3 }}>\n                {props?.children}\n            </Typography>\n        </Paper>\n    )\n}\n","import react from 'react';\nimport { Typography, TableContainer, Table, TableBody, TableRow, TableCell } from '@mui/material';\n\nexport const ItemDetails = ({\n    title,\n    items,\n}: {\n    title?: string;\n    titleWidth?: number\n    items: {\n        title: string;\n        value: string | number;\n    }[];\n}) => (\n    <>\n        {title && (<Typography component=\"h3\" variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\n            {title}\n        </Typography>)}\n        <TableContainer>\n            <Table aria-label=\"custom pagination table\">\n                <TableBody>\n                    {items.map(({ title, value }, i) => (\n                        <TableRow key={i}>\n                            <TableCell component=\"th\" scope=\"row\" style={{ width: 1, whiteSpace: 'nowrap' }}>\n                                {title}\n                            </TableCell>\n                            <TableCell >\n                                {value}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    </>\n);\n","import react, { PropsWithChildren } from 'react';\nimport { Typography } from '@mui/material';\n\nexport const Title = (props: PropsWithChildren<{}>) => (\n    <Typography variant=\"h3\" sx={{ mb: 3, fontSize: { xs: '1rem', md: '3rem' } }}>\n        {props?.children}\n    </Typography>\n);\n","export const parseEventNum = (event: any) => {\n    const num = parseInt((event.target as any).value);\n    return isNaN(num) ? 0 : num\n}","import react from 'react';\nimport { Grid, TextField } from '@mui/material';\nimport { parseEventNum } from '../../utils/utils';\n\nexport type RunnerSystemFormState = {\n    width: number;\n    length: number;\n    height: number;\n    dspWidth: number;\n    gapForChipboardEdge: number;\n}\n\nexport const RunnerSystemForm = ({ state, onChange }: {state: RunnerSystemFormState, onChange: (newState: RunnerSystemFormState) => void}) => {\n\n    const updateState = (stateDiff: Partial<RunnerSystemFormState>) => {\n        onChange({\n            ...state,\n            ...stateDiff,\n        });\n    }\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <TextField\n                    required\n                    inputProps={{ inputMode: 'numeric' }}\n                    label=\"Внутрення ширина корпуса (тумбы)\"\n                    fullWidth\n                    variant=\"standard\"\n                    value={state.width}\n                    onInput={(e) => updateState({ width: parseEventNum(e) })}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    required\n                    inputProps={{ inputMode: 'numeric' }}\n                    label=\"Глубина шухляды\"\n                    fullWidth\n                    variant=\"standard\"\n                    value={state.length}\n                    onInput={(e) => updateState({ length: parseEventNum(e) })}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    required\n                    inputProps={{ inputMode: 'numeric' }}\n                    label=\"Высота шухляды\"\n                    fullWidth\n                    variant=\"standard\"\n                    value={state.height}\n                    onInput={(e) => updateState({ height: parseEventNum(e)} )}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    required\n                    inputProps={{ inputMode: 'numeric' }}\n                    label=\"Толщина дсп\"\n                    fullWidth\n                    variant=\"standard\"\n                    value={state.dspWidth}\n                    onInput={(e) => updateState({ dspWidth: parseEventNum(e) })}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <TextField\n                    required\n                    inputProps={{ inputMode: 'numeric' }}\n                    label=\"Погрешность на кромку\"\n                    fullWidth\n                    variant=\"standard\"\n                    value={state.gapForChipboardEdge}\n                    onInput={(e) => updateState({ gapForChipboardEdge: parseEventNum(e) })}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n","import react, { useContext, useEffect, useState } from 'react';\nimport { Grid, Paper, TextField, Typography } from '@mui/material';\nimport { MainLayoutContext } from '../../layouts/MainLayout/MainLayout';\nimport { parseEventNum } from '../../utils/utils';\nimport { Details } from '../../components/Details/Details';\nimport { ItemDetails } from '../../components/ItemDetails/ItemDetails';\nimport { Title } from '../../components/Title/Title';\nimport { RunnerSystemForm, RunnerSystemFormState } from '../../components/RunnerSystemForm/RunnerSystemForm';\n\nexport function PageCalcHafeleWoodPro() {\n  const layoutCtx = useContext(MainLayoutContext);\n  useEffect(() => layoutCtx('Hafele Wood Pro', './Woodpro.pdf'), [layoutCtx]);\n  const [formState, setFormState] = useState<RunnerSystemFormState>({\n    width: 700 - 36,\n    height: 180,\n    length: 500,\n    dspWidth: 16,\n    gapForChipboardEdge: 1,\n  });\n\n  const {\n    width,\n    height,\n    length: depth,\n    dspWidth,\n    gapForChipboardEdge: hem,\n  } = formState;\n\n\n  const bottomWidth = width - 49 - hem;\n  const bottomDepth = depth - dspWidth - hem;\n\n  const backWidth = width - 49 - hem;\n  const backHeight = height - hem;\n\n  const sideHeight = height + 12 - hem;\n  const sideDepth = depth - hem;\n\n  const frontWidth = width - 49 - hem;\n  const frontHeight = height - dspWidth - hem;\n\n  const detailsTxt =\n    `${bottomWidth} x ${bottomDepth} - 1шт\n${backWidth} x ${backHeight} - 1шт\n${frontWidth} x ${frontHeight} - 1шт\n${sideDepth} x ${sideHeight} - 2шт\n\nТолщина ДСП: ${dspWidth}\n\nЗазор на кромку (по всем торцам деталей): ${hem} \n`\n\n  return (\n    <>\n      <Title>\n        Рассчет шухляды для Hafele Wood Pro\n      </Title>\n\n      <RunnerSystemForm \n        state={formState}\n        onChange={setFormState}\n      />\n\n      <Grid container spacing={3} sx={{ mt: 4, mb: 4 }}>\n        <Grid item xs={12}>\n          <Paper sx={{\n            p: 2,\n          }}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n              Итого рассчитанные значения\n            </Typography>\n\n            <ItemDetails\n              title=\"Дно\"\n              items={[\n                { title: 'Ширина', value: bottomWidth },\n                { title: 'Длинна', value: bottomDepth },\n              ]}\n            />\n\n            <ItemDetails\n              title=\"Задняя стенка\"\n              items={[\n                { title: 'Ширина', value: backWidth },\n                { title: 'Высота', value: backHeight },\n              ]}\n            />\n\n            <ItemDetails\n              title=\"Боковухи (2шт)\"\n              items={[\n                { title: 'Длинна', value: sideDepth },\n                { title: 'Высота', value: sideHeight },\n              ]}\n            />\n\n            <ItemDetails\n              title=\"Передняя (фронт) стенка\"\n              items={[\n                { title: 'Ширина', value: frontWidth },\n                { title: 'Высота', value: frontHeight },\n              ]}\n            />\n\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper sx={{\n            p: 2,\n          }}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n              Другие данные:\n            </Typography>\n\n            <ItemDetails\n              titleWidth={300}\n              items={[\n                { title: 'Высота блока (шухляда + направляющие)', value: height + 28 },\n                { title: 'Минимальная глубина корпуса', value: depth + 18 },\n              ]}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Details>{detailsTxt}</Details>\n      </Grid>\n    </>\n  );\n}\n","import react, { useContext, useEffect, useState } from 'react';\nimport { Grid, Paper, Typography } from '@mui/material';\nimport { Details } from '../../components/Details/Details';\nimport { Title } from '../../components/Title/Title';\nimport { MainLayoutContext } from '../../layouts/MainLayout/MainLayout';\nimport { RunnerSystemForm, RunnerSystemFormState } from '../../components/RunnerSystemForm/RunnerSystemForm';\nimport { ItemDetails } from '../../components/ItemDetails/ItemDetails';\n\nexport function PageCaclBlum() {\n    const layoutCtx = useContext(MainLayoutContext);\n    useEffect(() => layoutCtx('Blum Tandem 560F5000', './blum560f5000.pdf'), [layoutCtx]);\n\n    const [formState, setFormState] = useState<RunnerSystemFormState>({\n        width: 700 - 36,\n        height: 180,\n        length: 500,\n        dspWidth: 16,\n        gapForChipboardEdge: 1, // зазор на кромку\n    });\n\n    const {\n        width,\n        height,\n        length: nominalLength,\n        dspWidth,\n        gapForChipboardEdge: hem,\n    } = formState;\n\n    // const drawerLength = nominalLength - 10; // отнимаем 10мм согласно инструкции к направляющей,\n    const drawerLength = nominalLength - 8; // Но: практика показала что отнять надо только 8мм \n\n    const bottomWidth = width - 49 - hem;\n    const bottomDepth = drawerLength - dspWidth - hem - 1; // онимаем 1мм на зазор для днища шухляды\n\n    const backWidth = width - 49 - hem;\n    const backHeight = height - hem;\n\n    const sideHeight = height + 12 - hem;\n    const sideDepth = drawerLength - hem;\n\n    const frontWidth = width - 49 - hem;\n    const frontHeight = height - dspWidth - hem;\n\n    const detailsTxt =\n        `${bottomWidth} x ${bottomDepth} - 1шт` + \"\\n\" +\n        `${backWidth} x ${backHeight} - 1шт` + \"\\n\" +\n        `${frontWidth} x ${frontHeight} - 1шт` + \"\\n\" +\n        `${sideDepth} x ${sideHeight} - 2шт` + \"\\n\\n\" +\n        `Толщина ДСП: ${dspWidth}` + \"\\n\" +\n        `Зазор на кромку (по всем торцам деталей): ${hem} `;\n\n    return (\n        <>\n            <Title>Рассчет шухляды для направляющей Blum</Title>\n\n            <RunnerSystemForm\n                state={formState}\n                onChange={setFormState}\n            />\n\n            <Grid container spacing={3} sx={{ mt: 4, mb: 4 }}>\n                <Grid item xs={12}>\n                    <Paper sx={{\n                        p: 2,\n                    }}>\n                        <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n                            Итого рассчитанные значения\n                        </Typography>\n\n                        <ItemDetails\n                            title=\"Дно\"\n                            items={[\n                                { title: 'Ширина', value: bottomWidth },\n                                { title: 'Длинна', value: bottomDepth },\n                            ]}\n                        />\n\n                        <ItemDetails\n                            title=\"Задняя стенка\"\n                            items={[\n                                { title: 'Ширина', value: backWidth },\n                                { title: 'Высота', value: backHeight },\n                            ]}\n                        />\n\n                        <ItemDetails\n                            title=\"Боковухи (2шт)\"\n                            items={[\n                                { title: 'Длинна', value: sideDepth },\n                                { title: 'Высота', value: sideHeight },\n                            ]}\n                        />\n\n                        <ItemDetails\n                            title=\"Передняя (фронт) стенка\"\n                            items={[\n                                { title: 'Ширина', value: frontWidth },\n                                { title: 'Высота', value: frontHeight },\n                            ]}\n                        />\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper sx={{\n                        p: 2,\n                    }}>\n                        <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n                            Другие данные:\n                        </Typography>\n\n                        <ItemDetails\n                            titleWidth={300}\n                            items={[\n                                { title: 'Высота блока (шухляда + направляющие)', value: height + 28 },\n                                { title: 'Минимальная глубина корпуса', value: nominalLength + 18 },\n                            ]}\n                        />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Details>{detailsTxt}</Details>\n            </Grid>\n\n        </>\n    );\n}\n","import { Grid, Paper, TextField, Typography } from '@mui/material';\nimport react, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Details } from '../../components/Details/Details';\nimport { ItemDetails } from '../../components/ItemDetails/ItemDetails';\nimport { Title } from '../../components/Title/Title';\nimport { MainLayoutContext } from '../../layouts/MainLayout/MainLayout';\nimport { parseEventNum } from '../../utils/utils';\n\nexport function PageCalcBlumAntaro() {\n    const layoutCtx = useContext(MainLayoutContext);\n    useEffect(() => layoutCtx('Antaro (M)', './tandembox_antaro.pdf'), [layoutCtx]);\n\n    const [width, setWidth] = useState(700 - 36);\n    const [nominalLength, setNominalLength] = useState(500);\n    const [gapForChipboardEdge, setGapForChipboardEdge] = useState(1); // зазор на кромку\n\n    const bottomWidth = width - 75 - gapForChipboardEdge; // LW - 75mm\n    const bottomLength = nominalLength - 24 - gapForChipboardEdge; // NL - 24mm\n\n    const backWidth = width - 87 - gapForChipboardEdge; // LW - 87mm\n    const backHeight = 84 - gapForChipboardEdge; // size M - 84mm\n\n    const detailsTxt =\n        `${bottomWidth} x ${bottomLength} - 1шт` + \"\\n\" +\n        `${backWidth} x ${backHeight} - 1шт` + \"\\n\" +\n        \"Толщина ДСП: 16мм\\n\" +\n        `Зазор на кромку (по всем торцам деталей): ${gapForChipboardEdge}`;\n\n    return (\n        <>\n            <Title>Рассчет шухляды для Tandembox Antaro Blum (Высота M 84mm)</Title>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={4}>\n                    <TextField\n                        required\n                        inputProps={{ inputMode: 'numeric' }}\n                        label=\"Внутрення ширина корпуса (тумбы)\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={width}\n                        onInput={(e) => setWidth(parseEventNum(e))}\n                    />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <TextField\n                        required\n                        inputProps={{ inputMode: 'numeric' }}\n                        label=\"Номинальная длинна ящика\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={nominalLength}\n                        onInput={(e) => setNominalLength(parseEventNum(e))}\n                    />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <TextField\n                        required\n                        inputProps={{ inputMode: 'numeric' }}\n                        label=\"Погрешность на кромку\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={gapForChipboardEdge}\n                        onInput={(e) => setGapForChipboardEdge(parseEventNum(e))}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container spacing={3} sx={{ mt: 4, mb: 4 }}>\n                <Grid item xs={12}>\n                    <Paper sx={{\n                        p: 2,\n                    }}>\n                        <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n                            Итого рассчитанные значения\n                        </Typography>\n\n                        <ItemDetails\n                            title=\"Дно\"\n                            items={[\n                                { title: 'Ширина', value: bottomWidth },\n                                { title: 'Длинна', value: bottomLength },\n                            ]}\n                        />\n\n                        <ItemDetails\n                            title=\"Задняя стенка\"\n                            items={[\n                                { title: 'Ширина', value: backWidth },\n                                { title: 'Высота', value: backHeight },\n                            ]}\n                        />\n                    </Paper>\n                </Grid>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Details>{detailsTxt}</Details>\n            </Grid>\n        </>\n    );\n}\n","import react, { useContext, useEffect } from 'react';\n\n\nimport { MainLayoutContext } from '../../layouts/MainLayout/MainLayout';\n\n\nexport function PageHome() {\n\n    const layoutCtx = useContext(MainLayoutContext);\n    useEffect(() => layoutCtx('Главная', null), [layoutCtx]);\n    return (\n        <div>Some data</div>\n    );\n}\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport { PageCalcHafeleWoodPro } from './pages/PageCalcHafeleWoodPro/PageCalcHafeleWoodPro';\nimport { PageCaclBlum } from './pages/PageCalcBlum/PageCalcBlum';\nimport { PageCalcBlumAntaro } from './pages/PageCalcBlumAntaro/PageCalcBlumAntaro';\nimport { PageHome } from './pages/PageHome/PageHome';\nimport { MainLayout } from './layouts/MainLayout/MainLayout';\n\n\n\nfunction App() {\n  return (\n    <MainLayout>\n      <Routes>\n        <Route path=\"/\" element={<PageHome />} />\n        <Route path=\"blum\" element={<PageCaclBlum />} />\n        <Route path=\"antaro\" element={<PageCalcBlumAntaro />} />\n        <Route path=\"hafele\" element={<PageCalcHafeleWoodPro />} />\n     </Routes>\n    </MainLayout>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}