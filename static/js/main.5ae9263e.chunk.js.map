{"version":3,"sources":["layouts/MainLayout/MainLayout.tsx","pages/PageCalcHafeleWoodPro/PageCalcHafeleWoodPro.tsx","pages/PageCalcBlum/PageCalcBlum.tsx","pages/PageCalcBlumAntaro/PageCalcBlumAntaro.tsx","pages/PageHome/PageHome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MainLayout","props","Box","sx","flexGrow","CssBaseline","AppBar","position","Toolbar","IconButton","size","edge","color","mr","Typography","variant","component","display","pr","title","Button","my","RouterLink","to","linkToDocument","target","href","Container","maxWidth","mt","mb","children","CalcItemResult","items","titleWidth","gutterBottom","TableContainer","Table","minWidth","TableBody","map","i","value","TableRow","TableCell","scope","style","width","PageCalcHafeleWoodPro","useState","setWidth","height","setHeight","depth","setDepth","dspWidth","setDspWidth","hem","setHem","bottomWidth","bottomDepth","backWidth","backHeight","sideHeight","sideDepth","frontWidth","frontHeight","detailsTxt","Grid","container","spacing","item","xs","TextField","required","label","fullWidth","onInput","e","parseInt","md","Paper","p","id","whiteSpace","Title","styled","h1","DocumentLink","a","PageCaclBlum","nominalLength","setNominalLength","drawerLength","className","DetailsBlock","div","PageCalcBlumAntaro","gapForChipboardEdge","setGapForChipboardEdge","bottomLength","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","MuiDrawer","boxSizing","overflowX","breakpoints","up","createTheme","PageHome","Link","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ae9263e.chunk.js","sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport {\n    Link as RouterLink,\n} from 'react-router-dom';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { Container, CssBaseline } from '@mui/material';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\n\nexport function MainLayout(props: PropsWithChildren<{\n    title: string;\n    linkToDocument?: string;\n}>) {\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <CssBaseline />\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        sx={{ mr: 2 }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ display: 'flex', pr: 2 }}>\n                        {props.title}\n                    </Typography>\n                    <Box sx={{ flexGrow: 1, display: 'flex' }}>\n                        <Button\n                            sx={{ my: 2, color: 'white', display: 'block' }}\n                            component={RouterLink} to=\"/\"\n                        >\n                            Home\n                        </Button>\n                        <Button\n                            sx={{ my: 2, color: 'white', display: 'block' }}\n                            component={RouterLink} to=\"/hafele\"\n                        >\n                            Hafele\n                        </Button>\n                        <Button\n                            sx={{ my: 2, color: 'white', display: 'block' }}\n                            component={RouterLink} to=\"/blum\"\n                        >\n                            Blum Tandem\n                        </Button>\n                        <Button\n                            sx={{ my: 2, color: 'white', display: 'block' }}\n                            component={RouterLink} to=\"/antaro\"\n                        >\n                            Blum Antaro\n                        </Button>\n                    </Box>\n                    {\n                        props.linkToDocument &&\n                        <IconButton\n                            component=\"a\"\n                            target=\"_blank\"\n                            href={props.linkToDocument}\n                            color=\"inherit\">\n                            <PictureAsPdfIcon />\n                        </IconButton>\n                    }\n\n                </Toolbar>\n            </AppBar>\n            <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n                {props.children}\n            </Container>\n        </Box>\n    );\n}\n","import react, { useState } from 'react';\nimport { Grid, Paper, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from '@mui/material';\nimport { MainLayout } from '../../layouts/MainLayout/MainLayout';\n\nconst CalcItemResult = ({\n  title,\n  items,\n  titleWidth,\n}: {\n  title: string;\n  titleWidth?: number\n  items: {\n    title: string;\n    value: string | number;\n  }[];\n}) => (\n  <>\n    <Typography component=\"h3\" variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\n      {title}\n    </Typography>\n    <TableContainer>\n      <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\n        <TableBody>\n          {items.map(({ title, value }, i) => (\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" style={{ width: titleWidth || 160 }}>\n                {title}\n              </TableCell>\n              <TableCell >\n                {value}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  </>\n);\n\n\n\n\nexport function PageCalcHafeleWoodPro() {\n\n  const [width, setWidth] = useState(800 - 36);\n  const [height, setHeight] = useState(200);\n  const [depth, setDepth] = useState(500);\n  const [dspWidth, setDspWidth] = useState(16);\n  const [hem, setHem] = useState(1);\n\n  const bottomWidth = width - 49 - hem;\n  const bottomDepth = depth - dspWidth - hem;\n\n  const backWidth = width - 49 - hem;\n  const backHeight = height - hem;\n\n  const sideHeight = height + 12 - hem;\n  const sideDepth = depth - hem;\n\n  const frontWidth = width - 49 - hem;\n  const frontHeight = height - dspWidth - hem;\n\n  const detailsTxt =\n    `${bottomWidth} x ${bottomDepth} - 1шт\n${backWidth} x ${backHeight} - 1шт\n${frontWidth} x ${frontHeight} - 1шт\n${sideDepth} x ${sideHeight} - 2шт\n\nТолщина ДСП: ${dspWidth}\n\nЗазор на кромку (по всем торцам деталей): ${hem} \n`\n\n  return (\n    <MainLayout title=\"Hafele Wood Pro\" linkToDocument=\"./Woodpro.pdf\">\n      <Typography variant=\"h3\">\n        Рассчет шухляды для Hafele Wood Pro\n      </Typography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            label=\"Внутрення ширина корпуса (тумбы)\"\n            fullWidth\n            variant=\"standard\"\n            value={width}\n            onInput={(e) => setWidth(parseInt((e.target as any).value))}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            label=\"Глубина шухляды\"\n            fullWidth\n            variant=\"standard\"\n            value={depth}\n            onInput={(e) => setDepth(parseInt((e.target as any).value))}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            label=\"Высота шухляды\"\n            fullWidth\n            variant=\"standard\"\n            value={height}\n            onInput={(e) => setHeight(parseInt((e.target as any).value))}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            label=\"Толщина дсп\"\n            fullWidth\n            variant=\"standard\"\n            value={dspWidth}\n            onInput={(e) => setDspWidth(parseInt((e.target as any).value))}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            label=\"Погрешность на кромку\"\n            fullWidth\n            variant=\"standard\"\n            value={hem}\n            onInput={(e) => setHem(parseInt((e.target as any).value))}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} sx={{ mt: 4, mb: 4 }}>\n        <Grid item xs={12}>\n          <Paper sx={{\n            p: 2,\n          }}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n              Итого рассчитанные значения\n            </Typography>\n\n            <CalcItemResult\n              title=\"Дно\"\n              items={[\n                { title: 'Ширина', value: bottomWidth },\n                { title: 'Длинна', value: bottomDepth },\n              ]}\n            />\n\n            <CalcItemResult\n              title=\"Задняя стенка\"\n              items={[\n                { title: 'Ширина', value: backWidth },\n                { title: 'Высота', value: backHeight },\n              ]}\n            />\n\n            <CalcItemResult\n              title=\"Боковухи (2шт)\"\n              items={[\n                { title: 'Длинна', value: sideDepth },\n                { title: 'Высота', value: sideHeight },\n              ]}\n            />\n\n            <CalcItemResult\n              title=\"Передняя (фронт) стенка\"\n              items={[\n                { title: 'Ширина', value: frontWidth },\n                { title: 'Высота', value: frontHeight },\n              ]}\n            />\n\n\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper sx={{\n            p: 2,\n          }}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n              Другие данные:\n            </Typography>\n\n            <CalcItemResult\n              titleWidth={300}\n              title=\"Дно\"\n              items={[\n                { title: 'Высота блока (шухляда + направляющие)', value: height + 28 },\n                { title: 'Минимальная глубина корпуса', value: depth + 18 },\n              ]}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper sx={{\n          p: 2,\n        }}>\n          <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n            Детали:\n          </Typography>\n          <Typography id=\"modal-description\" sx={{ whiteSpace: 'pre-line', p: 3 }}>\n            {detailsTxt}\n          </Typography>\n        </Paper>\n\n      </Grid>\n    </MainLayout>\n  );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nconst DocumentLink = styled.a`\n    color: blue;\n    display: inline-block;\n    padding: 10px;\n    text-decoration: none;\n\n    &:hover{\n        background-color: rgba(0,0,0,.1);\n    }\n`;\n\nexport function PageCaclBlum() {\n    const [width, setWidth] = useState(700 - 36);\n    const [height, setHeight] = useState(180);\n    const [nominalLength, setNominalLength] = useState(500);\n    const [dspWidth, setDspWidth] = useState(16);\n    const [hem, setHem] = useState(1); // зазор на кромку\n\n    // const drawerLength = nominalLength - 10; // отнимаем 10мм согласно инструкции к направляющей,\n    const drawerLength = nominalLength - 8; // Но: практика показала что отнять надо только 8мм \n\n    const bottomWidth = width - 49 - hem;\n    const bottomDepth = drawerLength - dspWidth - hem - 1; // онимаем 1мм на зазор для днища шухляды\n\n    const backWidth = width - 49 - hem;\n    const backHeight = height - hem;\n\n    const sideHeight = height + 12 - hem;\n    const sideDepth = drawerLength - hem;\n\n    const frontWidth = width - 49 - hem;\n    const frontHeight = height - dspWidth - hem;\n\n    const detailsTxt =\n        `${bottomWidth} x ${bottomDepth} - 1шт` + \"\\n\" +\n        `${backWidth} x ${backHeight} - 1шт` + \"\\n\" +\n        `${frontWidth} x ${frontHeight} - 1шт` + \"\\n\" +\n        `${sideDepth} x ${sideHeight} - 2шт` + \"\\n\\n\" +\n        `Толщина ДСП: ${dspWidth}` + \"\\n\" +\n        `Зазор на кромку (по всем торцам деталей): ${hem} `;\n\n    return (\n        <div>\n            <Title>Рассчет шухляды для направляющей Blum</Title>\n\n            <DocumentLink href=\"./blum560f5000.pdf\" target=\"_blank\">📝 Documentation: Blum 560F5000</DocumentLink>\n\n            <div>\n                <div>\n                    Внутрення ширина корпуса (тумбы)\n                    <input value={width} onInput={(e) => setWidth(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Номинальная длинна направляющей\n                    <input value={nominalLength} onInput={(e) => setNominalLength(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Высота шухляды\n                    <input value={height} onInput={(e) => setHeight(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Толщина дсп\n                    <input value={dspWidth} onInput={(e) => setDspWidth(parseInt((e.target as any).value))} />\n                </div>\n\n                <div>\n                    Погрешность на кромку\n                    <input value={hem} onInput={(e) => setHem(parseInt((e.target as any).value))} />\n                </div>\n            </div>\n            <div>\n                <h3>Итого рассчитанные значения</h3>\n                <div>\n                    <h4>\n                        Дно\n                    </h4>\n                    <div>\n                        Ширина: {bottomWidth}<br />\n                        Длинна: {bottomDepth}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Задняя стенка\n                    </h4>\n                    <div>\n                        Ширина: {backWidth}<br />\n                        Высота: {backHeight}<br />\n                    </div>\n                </div>\n                <div>\n                    <h4>\n                        Боковухи (2шт)\n                    </h4>\n                    <div>\n                        Длинна: {sideDepth}<br />\n                        Высота: {sideHeight}<br />\n                    </div>\n                </div>\n                <div>\n                    <h4>\n                        Передняя (фронт) стенка\n                    </h4>\n                    <div>\n                        Ширина: {frontWidth}<br />\n                        Высота: {frontHeight}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Другие данные:\n                    </h4>\n                    <p>\n                        Высота блока (шухляда + направляющие) {height + 28}\n                    </p>\n                    <p>\n                        Минимальная глубина корпуса {nominalLength + 18}\n                    </p>\n                </div>\n            </div>\n\n            <div>\n                <h3>Детали</h3>\n                <div className=\"details-block\">{detailsTxt}</div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: rgb(219, 112, 147);\n`;\n\nconst DetailsBlock = styled.div`\n    white-space: pre;\n    margin-left: 1rem;\n    line-height: 1.5;\n    font-family: 'Courier New', Courier, monospace;\n`;\n\nconst DocumentLink = styled.a`\n    color: blue;\n    display: inline-block;\n    padding: 10px;\n    text-decoration: none;\n\n    &:hover{\n        background-color: rgba(0,0,0,.1);\n    }\n`;\n\nexport function PageCalcBlumAntaro() {\n    const [width, setWidth] = useState(700 - 36);\n    const [nominalLength, setNominalLength] = useState(500);\n    const [gapForChipboardEdge, setGapForChipboardEdge] = useState(1); // зазор на кромку\n\n    const bottomWidth = width - 75 - gapForChipboardEdge; // LW - 75mm\n    const bottomLength = nominalLength - 24 - gapForChipboardEdge; // NL - 24mm\n\n    const backWidth = width - 87 - gapForChipboardEdge; // LW - 87mm\n    const backHeight = 84 - gapForChipboardEdge; // size M - 84mm\n\n    const detailsTxt =\n        `${bottomWidth} x ${bottomLength} - 1шт` + \"\\n\" +\n        `${backWidth} x ${backHeight} - 1шт` + \"\\n\" +\n        \"Толщина ДСП: 16мм\\n\" +\n        `Зазор на кромку (по всем торцам деталей): ${gapForChipboardEdge}`;\n\n    return (\n        <div>\n            <Title>Рассчет шухляды для Tandembox Antaro Blum (Высота M 84mm)</Title>\n\n            <DocumentLink href=\"./tandembox_antaro.pdf\" target=\"_blank\">📝 Documentation: Blum Tandembox Antaro</DocumentLink>\n\n            <div>\n                <div>\n                    Внутрення ширина корпуса (тумбы)\n                    <input value={width} onInput={(e) => setWidth(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Номинальная длинна ящика\n                    <input value={nominalLength} onInput={(e) => setNominalLength(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Погрешность на кромку\n                    <input value={gapForChipboardEdge} onInput={(e) => setGapForChipboardEdge(parseInt((e.target as any).value))} />\n                </div>\n            </div>\n\n            <div>\n                <h3>Итого рассчитанные значения</h3>\n                <div>\n                    <h4>\n                        Дно\n                    </h4>\n                    <div>\n                        Ширина: {bottomWidth}<br />\n                        Длинна: {bottomLength}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Задняя стенка\n                    </h4>\n                    <div>\n                        Ширина: {backWidth}<br />\n                        Высота: {backHeight}<br />\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <h3>Детали</h3>\n                <DetailsBlock>{detailsTxt}</DetailsBlock>\n            </div>\n        </div>\n    );\n}\n","// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import styled from 'styled-components';\n\n\nimport * as React from 'react';\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport { MainLayout } from '../../layouts/MainLayout/MainLayout';\n\n\nfunction Copyright(props: any) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth: number = 240;\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create(['width', 'margin'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }),\n);\n\nconst mdTheme = createTheme();\n\nfunction DashboardContent() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            \n            \n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: '36px',\n                ...(open && { display: 'none' }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List>mainListItems</List>\n          <Divider />\n          <List>secondaryListItems</List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar />\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              {/* Chart */}\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 240,\n                  }}\n                >\n                  'Chart'\n                </Paper>\n              </Grid>\n              {/* Recent Deposits */}\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 240,\n                  }}\n                >\n                  'Deposits'\n                </Paper>\n              </Grid>\n              {/* Recent Orders */}\n              <Grid item xs={12}>\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n                  'Orders'\n                </Paper>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ pt: 4 }} />\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport function PageHome() {\n\n    return (\n        <MainLayout title=\"Home\">\n            Some data\n        </MainLayout>\n    )\n    // return (\n    //     <DashboardContent/>\n    // );\n    // return (\n    //     <Box sx={{ display: 'flex' }}>\n    //         <main>\n    //             <h2>Калькулятор для рассчета ящиков под направляющие</h2>\n    //         </main>\n    //         <nav>\n    //             <NavLink to=\"/hafele\">Hafele Wood Pro</NavLink>\n    //             <NavLink to=\"/blum\">Blum</NavLink>\n    //         </nav>\n    //     </Box>\n    // );\n}\n\nconst NavLink = styled(Link)`\n    padding: 10px;\n    color: blue;\n    display: block;\n`;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport { PageCalcHafeleWoodPro } from './pages/PageCalcHafeleWoodPro/PageCalcHafeleWoodPro';\nimport { PageCaclBlum } from './pages/PageCalcBlum/PageCalcBlum';\nimport { PageCalcBlumAntaro } from './pages/PageCalcBlumAntaro/PageCalcBlumAntaro';\nimport { PageHome } from './pages/PageHome/PageHome';\n\n\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<PageHome />} />\n      <Route path=\"blum\" element={<PageCaclBlum />} />\n      <Route path=\"antaro\" element={<PageCalcBlumAntaro />} />\n      <Route path=\"hafele\" element={<PageCalcHafeleWoodPro />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}