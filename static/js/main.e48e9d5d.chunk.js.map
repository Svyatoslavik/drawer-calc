{"version":3,"sources":["components/CalcHafeleWoodPro/CalcHafeleWoodPro.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CalcHafeleWoodPro","useState","width","setWidth","height","setHeight","depth","setDepth","dspWidth","setDspWidth","hem","setHem","bottomWidth","bottomDepth","backWidth","backHeight","sideHeight","sideDepth","frontWidth","frontHeight","detailsTxt","href","target","value","onInput","e","parseInt","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAGO,SAASA,IAAqB,IAAD,EAERC,mBAAS,KAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGNF,mBAAS,KAHH,mBAG3BG,EAH2B,KAGnBC,EAHmB,OAIRJ,mBAAS,KAJD,mBAI3BK,EAJ2B,KAIpBC,EAJoB,OAKFN,mBAAS,IALP,mBAK3BO,EAL2B,KAKjBC,EALiB,OAMZR,mBAAS,GANG,mBAM3BS,EAN2B,KAMtBC,EANsB,KAQ5BC,EAAcV,EAAQ,GAAKQ,EAC3BG,EAAcP,EAAQE,EAAWE,EAEjCI,EAAYZ,EAAQ,GAAKQ,EACzBK,EAAaX,EAASM,EAEtBM,EAAaZ,EAAS,GAAKM,EAC3BO,EAAYX,EAAQI,EAEpBQ,EAAahB,EAAQ,GAAKQ,EAC1BS,EAAcf,EAASI,EAAWE,EAElCU,EAAU,UACfR,EADe,cACEC,EADF,6BAEhBC,EAFgB,cAEDC,EAFC,6BAGhBG,EAHgB,cAGAC,EAHA,6BAIhBF,EAJgB,cAIDD,EAJC,8FAMHR,EANG,yNAQ0BE,EAR1B,OAWhB,OACE,gCACE,0JACA,mBAAGW,KAAK,gBAAgBC,OAAO,SAA/B,iCACA,gCACE,0MAEE,uBAAOC,MAAOrB,EAAOsB,QAAS,SAACC,GAAD,OAAOtB,EAASuB,SAAUD,EAAEH,OAAeC,cAE3E,wHAEE,uBAAOA,MAAOjB,EAAOkB,QAAS,SAACC,GAAD,OAAOlB,EAASmB,SAAUD,EAAEH,OAAeC,cAE3E,kHAEE,uBAAOA,MAAOnB,EAAQoB,QAAS,SAACC,GAAD,OAAOpB,EAAUqB,SAAUD,EAAEH,OAAeC,cAE7E,gGAEE,uBAAOA,MAAOf,EAAUgB,QAAS,SAACC,GAAD,OAAOhB,EAAYiB,SAAUD,EAAEH,OAAeC,cAGjF,uJAEE,uBAAOA,MAAOb,EAAKc,QAAS,SAACC,GAAD,OAAOd,EAAOe,SAAUD,EAAEH,OAAeC,iBAGzE,gCACE,0LACA,gCACE,oDAGA,yEACYX,EAAa,uBADzB,yCAEYC,EAAa,6BAI3B,gCACE,2GAGA,yEACYC,EAAW,uBADvB,yCAEYC,EAAY,6BAG1B,gCACE,kGAGA,yEACYE,EAAW,uBADvB,yCAEYD,EAAY,6BAG1B,gCACE,wJAGA,yEACYE,EAAY,uBADxB,yCAEYC,EAAa,6BAI3B,gCACE,4GAGA,6NACyCf,EAAS,MAElD,0LAC+BE,EAAQ,YAK3C,gCACE,sEACA,qBAAKqB,UAAU,gBAAf,SAAgCP,UCxGzBQ,MARf,WACE,OACE,qBAAKD,UAAU,YAAf,SACE,cAAC,EAAD,OCOSE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e48e9d5d.chunk.js","sourcesContent":["import react, { useState } from 'react';\nimport './CalcHafeleWoodPro.css';\n\nexport function CalcHafeleWoodPro() {\n\n  const [width, setWidth] = useState(800 - 36);\n  const [height, setHeight] = useState(200);\n  const [depth, setDepth] = useState(500);\n  const [dspWidth, setDspWidth] = useState(16);\n  const [hem, setHem] = useState(0);\n\n  const bottomWidth = width - 49 - hem;\n  const bottomDepth = depth - dspWidth - hem;\n\n  const backWidth = width - 49 - hem;\n  const backHeight = height - hem;\n\n  const sideHeight = height + 12 - hem;\n  const sideDepth = depth - hem;\n\n  const frontWidth = width - 49 - hem;\n  const frontHeight = height - dspWidth - hem;\n\n  const detailsTxt = \n`${bottomWidth} x ${bottomDepth} - 1шт\n${backWidth} x ${backHeight} - 1шт\n${frontWidth} x ${frontHeight} - 1шт\n${sideDepth} x ${sideHeight} - 2шт\n\nТолщина ДСП: ${dspWidth}\n\nЗазор на кромку (по всем торцам деталей): ${hem} \n`\n\n  return (\n    <div>\n      <h1>Рассчет шухляды для Hafele Wood Pro</h1>\n      <a href=\"./Woodpro.pdf\" target=\"_blank\">Hafele Wood Pro doc</a>\n      <div>\n        <div>\n          Внутрення ширина корпуса (тумбы)\n          <input value={width} onInput={(e) => setWidth(parseInt((e.target as any).value))} />\n        </div>\n        <div>\n          Глубина шухляды\n          <input value={depth} onInput={(e) => setDepth(parseInt((e.target as any).value))} />\n        </div>\n        <div>\n          Высота шухляды\n          <input value={height} onInput={(e) => setHeight(parseInt((e.target as any).value))} />\n        </div>\n        <div>\n          Толщина дсп\n          <input value={dspWidth} onInput={(e) => setDspWidth(parseInt((e.target as any).value))} />\n        </div>\n\n        <div>\n          Погрешность на кромку\n          <input value={hem} onInput={(e) => setHem(parseInt((e.target as any).value))} />\n        </div>\n      </div>\n      <div>\n        <h3>Итого рассчитанные значения</h3>\n        <div>\n          <h4>\n            Дно\n          </h4>\n          <div>\n            Ширина: { bottomWidth }<br/>\n            Длинна: { bottomDepth }<br/>\n          </div>\n        </div>\n        \n        <div>\n          <h4>\n          Задняя стенка\n          </h4>\n          <div>\n            Ширина: { backWidth }<br/>\n            Высота: { backHeight }<br/>\n          </div>\n        </div>\n        <div>\n          <h4>\n          Боковухи (2шт)\n          </h4>\n          <div>\n            Длинна: { sideDepth }<br/>\n            Высота: { sideHeight }<br/>\n          </div>\n        </div>\n        <div>\n          <h4>\n          Передняя (фронт) стенка\n          </h4>\n          <div>\n            Ширина: { frontWidth }<br/>\n            Высота: { frontHeight }<br/>\n          </div>\n        </div>\n\n        <div>\n          <h4>\n            Другие данные:\n          </h4>\n          <p>\n            Высота блока (шухляда + направляющие) {height + 28}\n          </p>\n          <p>\n            Минимальная глубина корпуса {depth + 18}\n          </p>\n        </div>\n      </div>\n\n      <div>\n        <h3>Детали</h3>\n        <div className=\"details-block\">{detailsTxt}</div> \n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { CalcHafeleWoodPro } from './components/CalcHafeleWoodPro/CalcHafeleWoodPro';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <CalcHafeleWoodPro></CalcHafeleWoodPro>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}