{"version":3,"sources":["components/CalcHafeleWoodPro/CalcHafeleWoodPro.tsx","pages/PageCalcBlum/PageCalcBlum.tsx","pages/PageCalcBlumAntaro/PageCalcBlumAntaro.tsx","pages/PageHome/PageHome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","styled","h1","CalcHafeleWoodPro","useState","width","setWidth","height","setHeight","depth","setDepth","dspWidth","setDspWidth","hem","setHem","bottomWidth","bottomDepth","backWidth","backHeight","sideHeight","sideDepth","frontWidth","frontHeight","detailsTxt","href","target","value","onInput","e","parseInt","className","DocumentLink","a","PageCaclBlum","nominalLength","setNominalLength","drawerLength","DetailsBlock","div","PageCalcBlumAntaro","gapForChipboardEdge","setGapForChipboardEdge","bottomLength","PageHome","Box","sx","display","NavLink","to","Link","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00534dbf.chunk.js","sourcesContent":["import react, { useState } from 'react';\nimport styled from 'styled-components';\nimport './CalcHafeleWoodPro.css';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nexport function CalcHafeleWoodPro() {\n\n  const [width, setWidth] = useState(800 - 36);\n  const [height, setHeight] = useState(200);\n  const [depth, setDepth] = useState(500);\n  const [dspWidth, setDspWidth] = useState(16);\n  const [hem, setHem] = useState(0);\n\n  const bottomWidth = width - 49 - hem;\n  const bottomDepth = depth - dspWidth - hem;\n\n  const backWidth = width - 49 - hem;\n  const backHeight = height - hem;\n\n  const sideHeight = height + 12 - hem;\n  const sideDepth = depth - hem;\n\n  const frontWidth = width - 49 - hem;\n  const frontHeight = height - dspWidth - hem;\n\n  const detailsTxt = \n`${bottomWidth} x ${bottomDepth} - 1шт\n${backWidth} x ${backHeight} - 1шт\n${frontWidth} x ${frontHeight} - 1шт\n${sideDepth} x ${sideHeight} - 2шт\n\nТолщина ДСП: ${dspWidth}\n\nЗазор на кромку (по всем торцам деталей): ${hem} \n`\n\n  return (\n    <div>\n      <Title>Рассчет шухляды для Hafele Wood Pro</Title>\n      <a href=\"./Woodpro.pdf\" target=\"_blank\">Hafele Wood Pro doc</a>\n      <div>\n        <div>\n          Внутрення ширина корпуса (тумбы)\n          <input value={width} onInput={(e) => setWidth(parseInt((e.target as any).value))} />\n        </div>\n        <div>\n          Глубина шухляды\n          <input value={depth} onInput={(e) => setDepth(parseInt((e.target as any).value))} />\n        </div>\n        <div>\n          Высота шухляды\n          <input value={height} onInput={(e) => setHeight(parseInt((e.target as any).value))} />\n        </div>\n        <div>\n          Толщина дсп\n          <input value={dspWidth} onInput={(e) => setDspWidth(parseInt((e.target as any).value))} />\n        </div>\n\n        <div>\n          Погрешность на кромку\n          <input value={hem} onInput={(e) => setHem(parseInt((e.target as any).value))} />\n        </div>\n      </div>\n      <div>\n        <h3>Итого рассчитанные значения</h3>\n        <div>\n          <h4>\n            Дно\n          </h4>\n          <div>\n            Ширина: { bottomWidth }<br/>\n            Длинна: { bottomDepth }<br/>\n          </div>\n        </div>\n        \n        <div>\n          <h4>\n          Задняя стенка\n          </h4>\n          <div>\n            Ширина: { backWidth }<br/>\n            Высота: { backHeight }<br/>\n          </div>\n        </div>\n        <div>\n          <h4>\n          Боковухи (2шт)\n          </h4>\n          <div>\n            Длинна: { sideDepth }<br/>\n            Высота: { sideHeight }<br/>\n          </div>\n        </div>\n        <div>\n          <h4>\n          Передняя (фронт) стенка\n          </h4>\n          <div>\n            Ширина: { frontWidth }<br/>\n            Высота: { frontHeight }<br/>\n          </div>\n        </div>\n\n        <div>\n          <h4>\n            Другие данные:\n          </h4>\n          <p>\n            Высота блока (шухляда + направляющие) {height + 28}\n          </p>\n          <p>\n            Минимальная глубина корпуса {depth + 18}\n          </p>\n        </div>\n      </div>\n\n      <div>\n        <h3>Детали</h3>\n        <div className=\"details-block\">{detailsTxt}</div> \n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nconst DocumentLink = styled.a`\n    color: blue;\n    display: inline-block;\n    padding: 10px;\n    text-decoration: none;\n\n    &:hover{\n        background-color: rgba(0,0,0,.1);\n    }\n`;\n\nexport function PageCaclBlum() {\n    const [width, setWidth] = useState(700 - 36);\n    const [height, setHeight] = useState(180);\n    const [nominalLength, setNominalLength] = useState(500);\n    const [dspWidth, setDspWidth] = useState(16);\n    const [hem, setHem] = useState(1); // зазор на кромку\n\n    // const drawerLength = nominalLength - 10; // отнимаем 10мм согласно инструкции к направляющей,\n    const drawerLength = nominalLength - 8; // Но: практика показала что отнять надо только 8мм \n\n    const bottomWidth = width - 49 - hem;\n    const bottomDepth = drawerLength - dspWidth - hem - 1; // онимаем 1мм на зазор для днища шухляды\n\n    const backWidth = width - 49 - hem;\n    const backHeight = height - hem;\n\n    const sideHeight = height + 12 - hem;\n    const sideDepth = drawerLength - hem;\n\n    const frontWidth = width - 49 - hem;\n    const frontHeight = height - dspWidth - hem;\n\n    const detailsTxt =\n        `${bottomWidth} x ${bottomDepth} - 1шт` + \"\\n\" +\n        `${backWidth} x ${backHeight} - 1шт` + \"\\n\" +\n        `${frontWidth} x ${frontHeight} - 1шт` + \"\\n\" +\n        `${sideDepth} x ${sideHeight} - 2шт` + \"\\n\\n\" +\n        `Толщина ДСП: ${dspWidth}` + \"\\n\" +\n        `Зазор на кромку (по всем торцам деталей): ${hem} `;\n\n    return (\n        <div>\n            <Title>Рассчет шухляды для направляющей Blum</Title>\n\n            <DocumentLink href=\"./blum560f5000.pdf\" target=\"_blank\">📝 Documentation: Blum 560F5000</DocumentLink>\n\n            <div>\n                <div>\n                    Внутрення ширина корпуса (тумбы)\n                    <input value={width} onInput={(e) => setWidth(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Номинальная длинна направляющей\n                    <input value={nominalLength} onInput={(e) => setNominalLength(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Высота шухляды\n                    <input value={height} onInput={(e) => setHeight(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Толщина дсп\n                    <input value={dspWidth} onInput={(e) => setDspWidth(parseInt((e.target as any).value))} />\n                </div>\n\n                <div>\n                    Погрешность на кромку\n                    <input value={hem} onInput={(e) => setHem(parseInt((e.target as any).value))} />\n                </div>\n            </div>\n            <div>\n                <h3>Итого рассчитанные значения</h3>\n                <div>\n                    <h4>\n                        Дно\n                    </h4>\n                    <div>\n                        Ширина: {bottomWidth}<br />\n                        Длинна: {bottomDepth}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Задняя стенка\n                    </h4>\n                    <div>\n                        Ширина: {backWidth}<br />\n                        Высота: {backHeight}<br />\n                    </div>\n                </div>\n                <div>\n                    <h4>\n                        Боковухи (2шт)\n                    </h4>\n                    <div>\n                        Длинна: {sideDepth}<br />\n                        Высота: {sideHeight}<br />\n                    </div>\n                </div>\n                <div>\n                    <h4>\n                        Передняя (фронт) стенка\n                    </h4>\n                    <div>\n                        Ширина: {frontWidth}<br />\n                        Высота: {frontHeight}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Другие данные:\n                    </h4>\n                    <p>\n                        Высота блока (шухляда + направляющие) {height + 28}\n                    </p>\n                    <p>\n                        Минимальная глубина корпуса {nominalLength + 18}\n                    </p>\n                </div>\n            </div>\n\n            <div>\n                <h3>Детали</h3>\n                <div className=\"details-block\">{detailsTxt}</div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: rgb(219, 112, 147);\n`;\n\nconst DetailsBlock = styled.div`\n    white-space: pre;\n    margin-left: 1rem;\n    line-height: 1.5;\n    font-family: 'Courier New', Courier, monospace;\n`;\n\nconst DocumentLink = styled.a`\n    color: blue;\n    display: inline-block;\n    padding: 10px;\n    text-decoration: none;\n\n    &:hover{\n        background-color: rgba(0,0,0,.1);\n    }\n`;\n\nexport function PageCalcBlumAntaro() {\n    const [width, setWidth] = useState(700 - 36);\n    const [nominalLength, setNominalLength] = useState(500);\n    const [gapForChipboardEdge, setGapForChipboardEdge] = useState(1); // зазор на кромку\n\n    const bottomWidth = width - 75 - gapForChipboardEdge; // LW - 75mm\n    const bottomLength = nominalLength - 24 - gapForChipboardEdge; // NL - 24mm\n\n    const backWidth = width - 87 - gapForChipboardEdge; // LW - 87mm\n    const backHeight = 84 - gapForChipboardEdge; // size M - 84mm\n\n    const detailsTxt =\n        `${bottomWidth} x ${bottomLength} - 1шт` + \"\\n\" +\n        `${backWidth} x ${backHeight} - 1шт` + \"\\n\" +\n        \"Толщина ДСП: 16мм\\n\" +\n        `Зазор на кромку (по всем торцам деталей): ${gapForChipboardEdge}`;\n\n    return (\n        <div>\n            <Title>Рассчет шухляды для Tandembox Antaro Blum (Высота M 84mm)</Title>\n\n            <DocumentLink href=\"./tandembox_antaro.pdf\" target=\"_blank\">📝 Documentation: Blum Tandembox Antaro</DocumentLink>\n\n            <div>\n                <div>\n                    Внутрення ширина корпуса (тумбы)\n                    <input value={width} onInput={(e) => setWidth(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Номинальная длинна ящика\n                    <input value={nominalLength} onInput={(e) => setNominalLength(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Погрешность на кромку\n                    <input value={gapForChipboardEdge} onInput={(e) => setGapForChipboardEdge(parseInt((e.target as any).value))} />\n                </div>\n            </div>\n\n            <div>\n                <h3>Итого рассчитанные значения</h3>\n                <div>\n                    <h4>\n                        Дно\n                    </h4>\n                    <div>\n                        Ширина: {bottomWidth}<br />\n                        Длинна: {bottomLength}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Задняя стенка\n                    </h4>\n                    <div>\n                        Ширина: {backWidth}<br />\n                        Высота: {backHeight}<br />\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <h3>Детали</h3>\n                <DetailsBlock>{detailsTxt}</DetailsBlock>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box } from '@mui/material';\nimport styled from 'styled-components';\n\n\nexport function PageHome() {\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <main>\n                <h2>Калькулятор для рассчета ящиков под направляющие</h2>\n            </main>\n            <nav>\n                <NavLink to=\"/hafele\">Hafele Wood Pro</NavLink>\n                <NavLink to=\"/blum\">Blum</NavLink>\n            </nav>\n        </Box>\n    );\n}\n\nconst NavLink = styled(Link)`\n    padding: 10px;\n    color: blue;\n    display: block;\n`;\n","import React from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './App.css';\nimport { CalcHafeleWoodPro } from './components/CalcHafeleWoodPro/CalcHafeleWoodPro';\nimport { PageCaclBlum } from './pages/PageCalcBlum/PageCalcBlum';\nimport { PageCalcBlumAntaro } from './pages/PageCalcBlumAntaro/PageCalcBlumAntaro';\nimport { PageHome } from './pages/PageHome/PageHome';\n\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <nav>\n        <NavLink to=\"/\">Главная</NavLink>\n        <NavLink to=\"/hafele\">Hafele</NavLink>\n        <NavLink to=\"/blum\">Blum</NavLink>\n        <NavLink to=\"/antaro\">Blum Tandembox Antaro (M 84mm)</NavLink>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<PageHome />} />\n        <Route path=\"blum\" element={<PageCaclBlum />} />\n        <Route path=\"antaro\" element={<PageCalcBlumAntaro />} />\n        <Route path=\"hafele\" element={<CalcHafeleWoodPro />} />\n      </Routes>\n      \n    </div>\n  );\n}\n\nconst NavLink = styled(Link)`\n  padding: 20px;\n  color: blue;\n  text-decoration: none;\n  &:hover {\n    background: rgba(1,1,1,.1);\n  }\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}