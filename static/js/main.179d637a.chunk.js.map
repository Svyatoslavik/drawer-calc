{"version":3,"sources":["layouts/MainLayout/MainLayout.tsx","utils/utils.ts","components/Details/Details.tsx","pages/PageCalcHafeleWoodPro/PageCalcHafeleWoodPro.tsx","pages/PageCalcBlum/PageCalcBlum.tsx","pages/PageCalcBlumAntaro/PageCalcBlumAntaro.tsx","pages/PageHome/PageHome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MainLayoutContext","React","createContext","title","downdloadLink","MainLayout","props","useState","isDrawerOpn","setIsDrawerOpen","setTitle","linkToDocument","setLinkToDocument","toggleDrawer","open","event","type","key","Provider","value","SwipeableDrawer","anchor","onClose","onOpen","Box","sx","width","role","onClick","onKeyDown","List","ListItem","button","component","RouterLink","to","ListItemIcon","ListItemText","primary","flexGrow","CssBaseline","AppBar","position","Toolbar","display","xs","md","IconButton","size","edge","color","mr","Typography","variant","pr","Button","my","target","href","Container","maxWidth","mt","mb","children","parseEventNum","num","parseInt","isNaN","Details","Paper","p","gutterBottom","id","whiteSpace","CalcItemResult","items","titleWidth","TableContainer","Table","TableBody","map","i","TableRow","TableCell","scope","style","PageCalcHafeleWoodPro","layoutCtx","useContext","useEffect","setWidth","height","setHeight","depth","setDepth","dspWidth","setDspWidth","hem","setHem","bottomWidth","bottomDepth","backWidth","backHeight","sideHeight","sideDepth","frontWidth","frontHeight","detailsTxt","Grid","container","spacing","item","TextField","required","inputProps","inputMode","label","fullWidth","onInput","e","Title","styled","h1","DocumentLink","a","PageCaclBlum","nominalLength","setNominalLength","drawerLength","DetailsBlock","div","PageCalcBlumAntaro","gapForChipboardEdge","setGapForChipboardEdge","bottomLength","PageHome","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.179d637a.chunk.js","sourcesContent":["import React, { PropsWithChildren, useState } from 'react';\nimport {\n    Link as RouterLink,\n} from 'react-router-dom';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { Container, CssBaseline, List, ListItem, ListItemIcon, ListItemText, SwipeableDrawer } from '@mui/material';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport HomeIcon from '@mui/icons-material/Home';\nimport CalculateIcon from '@mui/icons-material/Calculate';\n\ntype NullableString = string | null;\n\nexport const MainLayoutContext = React.createContext(\n    (title: NullableString, downdloadLink: NullableString) => { }\n);\n\nexport function MainLayout(props: PropsWithChildren<{}>) {\n    const [isDrawerOpn, setIsDrawerOpen] = useState(false);\n\n    const [title, setTitle] = useState<NullableString>(null);\n    const [linkToDocument, setLinkToDocument] = useState<NullableString>(null);\n\n    const toggleDrawer = (open: boolean) =>\n        (event: React.KeyboardEvent | React.MouseEvent) => {\n            if (\n                event &&\n                event.type === 'keydown' &&\n                ((event as React.KeyboardEvent).key === 'Tab' ||\n                    (event as React.KeyboardEvent).key === 'Shift')\n            ) {\n                return;\n            }\n\n            setIsDrawerOpen(open);\n        };\n\n    return (\n        <>\n            <MainLayoutContext.Provider value={(title: NullableString, downdloadLink: NullableString) => {\n                setTitle(title);\n                setLinkToDocument(downdloadLink);\n            }}>\n                <SwipeableDrawer\n                    anchor=\"left\"\n                    open={isDrawerOpn}\n                    onClose={toggleDrawer(false)}\n                    onOpen={toggleDrawer(true)}\n                >\n                    <Box\n                        sx={{ width: 250 }}\n                        role=\"presentation\"\n                        onClick={toggleDrawer(false)}\n                        onKeyDown={toggleDrawer(false)}\n                    >\n                        <List>\n                            <ListItem button component={RouterLink} to=\"/\">\n                                <ListItemIcon>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Главная\" />\n                            </ListItem>\n                            <ListItem button component={RouterLink} to=\"/hafele\">\n                                <ListItemIcon>\n                                    <CalculateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Hafele\" />\n                            </ListItem>\n                            <ListItem button component={RouterLink} to=\"/blum\">\n                                <ListItemIcon>\n                                    <CalculateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Blum\" />\n                            </ListItem>\n                            <ListItem button component={RouterLink} to=\"/antaro\">\n                                <ListItemIcon>\n                                    <CalculateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Antaro\" />\n                            </ListItem>\n                        </List>\n\n                    </Box>\n                </SwipeableDrawer>\n                <Box sx={{ flexGrow: 1 }}>\n                    <CssBaseline />\n\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                <IconButton\n                                    onClick={toggleDrawer(true)}\n                                    size=\"large\"\n                                    edge=\"start\"\n                                    color=\"inherit\"\n                                    aria-label=\"menu\"\n                                    sx={{ mr: 2 }}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            </Box>\n\n                            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: { xs: 1, md: 0 }, display: 'flex', pr: 2 }}>\n                                {title}\n                            </Typography>\n                            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                                <Button\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\n                                    component={RouterLink} to=\"/\"\n                                >\n                                    Главная\n                                </Button>\n                                <Button\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\n                                    component={RouterLink} to=\"/hafele\"\n                                >\n                                    Hafele\n                                </Button>\n                                <Button\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\n                                    component={RouterLink} to=\"/blum\"\n                                >\n                                    Blum Tandem\n                                </Button>\n                                <Button\n                                    sx={{ my: 2, color: 'white', display: 'block' }}\n                                    component={RouterLink} to=\"/antaro\"\n                                >\n                                    Blum Antaro\n                                </Button>\n                            </Box>\n                            {\n                                linkToDocument &&\n                                <IconButton\n                                    component=\"a\"\n                                    target=\"_blank\"\n                                    href={linkToDocument}\n                                    color=\"inherit\">\n                                    <PictureAsPdfIcon />\n                                </IconButton>\n                            }\n\n                        </Toolbar>\n                    </AppBar>\n                    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n                        {props.children}\n                    </Container>\n                </Box>\n            </MainLayoutContext.Provider>\n        </>\n    );\n}\n","export const parseEventNum = (event: any) => {\n    const num = parseInt((event.target as any).value);\n    return isNaN(num) ? 0 : num\n}","import React, { PropsWithChildren } from 'react';\nimport { Paper, Typography } from '@mui/material';\n\n\nexport function Details(props: PropsWithChildren<{}>) {\n    return (\n        <Paper sx={{\n            p: 2,\n        }}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n                Детали:\n            </Typography>\n            <Typography id=\"modal-description\" sx={{ whiteSpace: 'pre-line', p: 3 }}>\n                {props?.children}\n            </Typography>\n        </Paper>\n    )\n}\n","import react, { useContext, useEffect, useState } from 'react';\nimport { Grid, Paper, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from '@mui/material';\nimport { MainLayout, MainLayoutContext } from '../../layouts/MainLayout/MainLayout';\nimport { parseEventNum } from '../../utils/utils';\nimport { Details } from '../../components/Details/Details';\n\nconst CalcItemResult = ({\n  title,\n  items,\n  titleWidth,\n}: {\n  title?: string;\n  titleWidth?: number\n  items: {\n    title: string;\n    value: string | number;\n  }[];\n}) => (\n  <>\n    {title && (<Typography component=\"h3\" variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\n      {title}\n    </Typography>)}\n    <TableContainer>\n      <Table aria-label=\"custom pagination table\">\n        <TableBody>\n          {items.map(({ title, value }, i) => (\n            <TableRow key={i}>\n              {/* <TableCell component=\"th\" scope=\"row\" style={{ maxWidth: titleWidth || 160 }}> */}\n              <TableCell component=\"th\" scope=\"row\" style={{ width: 1, whiteSpace: 'nowrap' }}>\n                {title}\n              </TableCell>\n              <TableCell >\n                {value}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  </>\n);\n\n\n\n\nexport function PageCalcHafeleWoodPro() {\n  const layoutCtx = useContext(MainLayoutContext);\n  useEffect(() => layoutCtx('Hafele Wood Pro', './Woodpro.pdf'), [layoutCtx]);\n\n  const [width, setWidth] = useState(800 - 36);\n  const [height, setHeight] = useState(200);\n  const [depth, setDepth] = useState(500);\n  const [dspWidth, setDspWidth] = useState(16);\n  const [hem, setHem] = useState(1);\n\n  const bottomWidth = width - 49 - hem;\n  const bottomDepth = depth - dspWidth - hem;\n\n  const backWidth = width - 49 - hem;\n  const backHeight = height - hem;\n\n  const sideHeight = height + 12 - hem;\n  const sideDepth = depth - hem;\n\n  const frontWidth = width - 49 - hem;\n  const frontHeight = height - dspWidth - hem;\n\n  const detailsTxt =\n    `${bottomWidth} x ${bottomDepth} - 1шт\n${backWidth} x ${backHeight} - 1шт\n${frontWidth} x ${frontHeight} - 1шт\n${sideDepth} x ${sideHeight} - 2шт\n\nТолщина ДСП: ${dspWidth}\n\nЗазор на кромку (по всем торцам деталей): ${hem} \n`\n\n  return (\n    // <MainLayout title=\"Hafele Wood Pro\" linkToDocument=\"./Woodpro.pdf\">\n    <>\n      <Typography variant=\"h3\" sx={{ mb: 3 }}>\n        Рассчет шухляды для Hafele Wood Pro\n      </Typography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            inputProps={{ inputMode: 'numeric' }}\n            label=\"Внутрення ширина корпуса (тумбы)\"\n            fullWidth\n            variant=\"standard\"\n            value={width}\n            onInput={(e) => setWidth(parseEventNum(e))}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            inputProps={{ inputMode: 'numeric' }}\n            label=\"Глубина шухляды\"\n            fullWidth\n            variant=\"standard\"\n            value={depth}\n            onInput={(e) => setDepth(parseEventNum(e))}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            inputProps={{ inputMode: 'numeric' }}\n            label=\"Высота шухляды\"\n            fullWidth\n            variant=\"standard\"\n            value={height}\n            onInput={(e) => setHeight(parseEventNum(e))}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            inputProps={{ inputMode: 'numeric' }}\n            label=\"Толщина дсп\"\n            fullWidth\n            variant=\"standard\"\n            value={dspWidth}\n            onInput={(e) => setDspWidth(parseEventNum(e))}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            inputProps={{ inputMode: 'numeric' }}\n            label=\"Погрешность на кромку\"\n            fullWidth\n            variant=\"standard\"\n            value={hem}\n            onInput={(e) => setHem(parseEventNum(e))}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3} sx={{ mt: 4, mb: 4 }}>\n        <Grid item xs={12}>\n          <Paper sx={{\n            p: 2,\n          }}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n              Итого рассчитанные значения\n            </Typography>\n\n            <CalcItemResult\n              title=\"Дно\"\n              items={[\n                { title: 'Ширина', value: bottomWidth },\n                { title: 'Длинна', value: bottomDepth },\n              ]}\n            />\n\n            <CalcItemResult\n              title=\"Задняя стенка\"\n              items={[\n                { title: 'Ширина', value: backWidth },\n                { title: 'Высота', value: backHeight },\n              ]}\n            />\n\n            <CalcItemResult\n              title=\"Боковухи (2шт)\"\n              items={[\n                { title: 'Длинна', value: sideDepth },\n                { title: 'Высота', value: sideHeight },\n              ]}\n            />\n\n            <CalcItemResult\n              title=\"Передняя (фронт) стенка\"\n              items={[\n                { title: 'Ширина', value: frontWidth },\n                { title: 'Высота', value: frontHeight },\n              ]}\n            />\n\n\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper sx={{\n            p: 2,\n          }}>\n            <Typography component=\"h2\" variant=\"h5\" color=\"primary\" gutterBottom>\n              Другие данные:\n            </Typography>\n\n            <CalcItemResult\n              titleWidth={300}\n              items={[\n                { title: 'Высота блока (шухляда + направляющие)', value: height + 28 },\n                { title: 'Минимальная глубина корпуса', value: depth + 18 },\n              ]}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Details>{detailsTxt}</Details>\n      </Grid>\n      </>\n    // </MainLayout>\n  );\n}\n","import { Grid } from '@mui/material';\nimport React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Details } from '../../components/Details/Details';\nimport { MainLayoutContext } from '../../layouts/MainLayout/MainLayout';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nconst DocumentLink = styled.a`\n    color: blue;\n    display: inline-block;\n    padding: 10px;\n    text-decoration: none;\n\n    &:hover{\n        background-color: rgba(0,0,0,.1);\n    }\n`;\n\nexport function PageCaclBlum() {\n    const layoutCtx = useContext(MainLayoutContext);\n    useEffect(() => layoutCtx('Blum Tandem 560F5000', './blum560f5000.pdf'), [layoutCtx]);\n\n    const [width, setWidth] = useState(700 - 36);\n    const [height, setHeight] = useState(180);\n    const [nominalLength, setNominalLength] = useState(500);\n    const [dspWidth, setDspWidth] = useState(16);\n    const [hem, setHem] = useState(1); // зазор на кромку\n\n    // const drawerLength = nominalLength - 10; // отнимаем 10мм согласно инструкции к направляющей,\n    const drawerLength = nominalLength - 8; // Но: практика показала что отнять надо только 8мм \n\n    const bottomWidth = width - 49 - hem;\n    const bottomDepth = drawerLength - dspWidth - hem - 1; // онимаем 1мм на зазор для днища шухляды\n\n    const backWidth = width - 49 - hem;\n    const backHeight = height - hem;\n\n    const sideHeight = height + 12 - hem;\n    const sideDepth = drawerLength - hem;\n\n    const frontWidth = width - 49 - hem;\n    const frontHeight = height - dspWidth - hem;\n\n    const detailsTxt =\n        `${bottomWidth} x ${bottomDepth} - 1шт` + \"\\n\" +\n        `${backWidth} x ${backHeight} - 1шт` + \"\\n\" +\n        `${frontWidth} x ${frontHeight} - 1шт` + \"\\n\" +\n        `${sideDepth} x ${sideHeight} - 2шт` + \"\\n\\n\" +\n        `Толщина ДСП: ${dspWidth}` + \"\\n\" +\n        `Зазор на кромку (по всем торцам деталей): ${hem} `;\n\n    const parseEventNum = (event: any) => {\n        const num = parseInt((event.target as any).value);\n        return isNaN(num) ? 0 : num\n    } \n    return (\n        <div>\n            <Title>Рассчет шухляды для направляющей Blum</Title>\n\n            <DocumentLink href=\"./blum560f5000.pdf\" target=\"_blank\">📝 Documentation: Blum 560F5000</DocumentLink>\n\n            <div>\n                <div>\n                    Внутрення ширина корпуса (тумбы)\n                    <input value={width} onInput={(e) => setWidth(parseEventNum(e))} />\n                </div>\n                <div>\n                    Номинальная длинна направляющей\n                    <input value={nominalLength} onInput={(e) => setNominalLength(parseEventNum(e))} />\n                </div>\n                <div>\n                    Высота шухляды\n                    <input value={height} onInput={(e) => setHeight(parseEventNum(e))} />\n                </div>\n                <div>\n                    Толщина дсп\n                    <input value={dspWidth} onInput={(e) => setDspWidth(parseEventNum(e))} />\n                </div>\n\n                <div>\n                    Погрешность на кромку\n                    <input value={hem} onInput={(e) => setHem(parseEventNum(e))} />\n                </div>\n            </div>\n            <div>\n                <h3>Итого рассчитанные значения</h3>\n                <div>\n                    <h4>\n                        Дно\n                    </h4>\n                    <div>\n                        Ширина: {bottomWidth}<br />\n                        Длинна: {bottomDepth}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Задняя стенка\n                    </h4>\n                    <div>\n                        Ширина: {backWidth}<br />\n                        Высота: {backHeight}<br />\n                    </div>\n                </div>\n                <div>\n                    <h4>\n                        Боковухи (2шт)\n                    </h4>\n                    <div>\n                        Длинна: {sideDepth}<br />\n                        Высота: {sideHeight}<br />\n                    </div>\n                </div>\n                <div>\n                    <h4>\n                        Передняя (фронт) стенка\n                    </h4>\n                    <div>\n                        Ширина: {frontWidth}<br />\n                        Высота: {frontHeight}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Другие данные:\n                    </h4>\n                    <p>\n                        Высота блока (шухляда + направляющие) {height + 28}\n                    </p>\n                    <p>\n                        Минимальная глубина корпуса {nominalLength + 18}\n                    </p>\n                </div>\n            </div>\n\n            <Grid item xs={12}>\n                <Details>{detailsTxt}</Details>\n            </Grid>\n            \n        </div>\n    );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { MainLayoutContext } from '../../layouts/MainLayout/MainLayout';\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: rgb(219, 112, 147);\n`;\n\nconst DetailsBlock = styled.div`\n    white-space: pre;\n    margin-left: 1rem;\n    line-height: 1.5;\n    font-family: 'Courier New', Courier, monospace;\n`;\n\nconst DocumentLink = styled.a`\n    color: blue;\n    display: inline-block;\n    padding: 10px;\n    text-decoration: none;\n\n    &:hover{\n        background-color: rgba(0,0,0,.1);\n    }\n`;\n\nexport function PageCalcBlumAntaro() {\n    const layoutCtx = useContext(MainLayoutContext);\n    useEffect(() => layoutCtx('Antaro (M)', './tandembox_antaro.pdf'), [layoutCtx]);\n\n    const [width, setWidth] = useState(700 - 36);\n    const [nominalLength, setNominalLength] = useState(500);\n    const [gapForChipboardEdge, setGapForChipboardEdge] = useState(1); // зазор на кромку\n\n    const bottomWidth = width - 75 - gapForChipboardEdge; // LW - 75mm\n    const bottomLength = nominalLength - 24 - gapForChipboardEdge; // NL - 24mm\n\n    const backWidth = width - 87 - gapForChipboardEdge; // LW - 87mm\n    const backHeight = 84 - gapForChipboardEdge; // size M - 84mm\n\n    const detailsTxt =\n        `${bottomWidth} x ${bottomLength} - 1шт` + \"\\n\" +\n        `${backWidth} x ${backHeight} - 1шт` + \"\\n\" +\n        \"Толщина ДСП: 16мм\\n\" +\n        `Зазор на кромку (по всем торцам деталей): ${gapForChipboardEdge}`;\n\n    return (\n        <div>\n            <Title>Рассчет шухляды для Tandembox Antaro Blum (Высота M 84mm)</Title>\n\n            <DocumentLink href=\"./tandembox_antaro.pdf\" target=\"_blank\">📝 Documentation: Blum Tandembox Antaro</DocumentLink>\n\n            <div>\n                <div>\n                    Внутрення ширина корпуса (тумбы)\n                    <input value={width} onInput={(e) => setWidth(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Номинальная длинна ящика\n                    <input value={nominalLength} onInput={(e) => setNominalLength(parseInt((e.target as any).value))} />\n                </div>\n                <div>\n                    Погрешность на кромку\n                    <input value={gapForChipboardEdge} onInput={(e) => setGapForChipboardEdge(parseInt((e.target as any).value))} />\n                </div>\n            </div>\n\n            <div>\n                <h3>Итого рассчитанные значения</h3>\n                <div>\n                    <h4>\n                        Дно\n                    </h4>\n                    <div>\n                        Ширина: {bottomWidth}<br />\n                        Длинна: {bottomLength}<br />\n                    </div>\n                </div>\n\n                <div>\n                    <h4>\n                        Задняя стенка\n                    </h4>\n                    <div>\n                        Ширина: {backWidth}<br />\n                        Высота: {backHeight}<br />\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <h3>Детали</h3>\n                <DetailsBlock>{detailsTxt}</DetailsBlock>\n            </div>\n        </div>\n    );\n}\n","import react, { useContext, useEffect } from 'react';\n\n\nimport { MainLayoutContext } from '../../layouts/MainLayout/MainLayout';\n\n\nexport function PageHome() {\n\n    const layoutCtx = useContext(MainLayoutContext);\n    useEffect(() => layoutCtx('Главная', null), [layoutCtx]);\n    return (\n        <div>Some data</div>\n    );\n}\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport { PageCalcHafeleWoodPro } from './pages/PageCalcHafeleWoodPro/PageCalcHafeleWoodPro';\nimport { PageCaclBlum } from './pages/PageCalcBlum/PageCalcBlum';\nimport { PageCalcBlumAntaro } from './pages/PageCalcBlumAntaro/PageCalcBlumAntaro';\nimport { PageHome } from './pages/PageHome/PageHome';\nimport { MainLayout } from './layouts/MainLayout/MainLayout';\n\n\n\nfunction App() {\n  return (\n    <MainLayout>\n      <Routes>\n        <Route path=\"/\" element={<PageHome />} />\n        <Route path=\"blum\" element={<PageCaclBlum />} />\n        <Route path=\"antaro\" element={<PageCalcBlumAntaro />} />\n        <Route path=\"hafele\" element={<PageCalcHafeleWoodPro />} />\n     </Routes>\n    </MainLayout>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}